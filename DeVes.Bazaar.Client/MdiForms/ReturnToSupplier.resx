<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>