<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        k7Gk8r8Ior8ADJLSKZlP3x8AAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        k7Gk8r8Ior8ADJLSKZlP3x8AAAAASUVORK5CYII=
</value>
  </data>
</root>