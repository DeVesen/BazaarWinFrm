<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="m_removeCatBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAAAd0SU1FB9wHDBUNA2eUWzAAAAmWSURBVFhHtZYJVFXVGsdPMhgIaSmaYpoIyKBU
        gigIeJmUyQRUBCUElCsXmUeZZJZJZRBRQZRwwNkYcokD1svUxN6zsqdp5pRmIoEol/Gef98+nNfT1mu9
        Viv/a+3FOuzh9037u5v7u4UIm8n3FplVX3MwvHnRbNLVJl2tqjNaw3XF6ZcvhEj2DuxPxu4oD5R7WeLq
        whlo0tLYJ06/fEEmaVY0ZABlK9ATLMGXVnr4WEvjmDj98oVgmyt8Ux6wwQ/tUhu0zNZF4+vDPhWnX74Q
        avszThcABcvQFmiFixaT0TBC/Qtx+uXqlw+MVZ+Gze3FyXwg1xuPls/GhZk6qBuu9o245O+Vv7+/mkwm
        2x4UFFTjHbDSCjG2Y+TxbjyOrwOyvfDQ1wLnZ7yNutfUbopb/rr8/PxUY2JiisPCwoqCg4MnhoeHqwcE
        BJxIS0tDZWUlwiIiec/FXj/UR3gBdWlkwEI8XDYTn5tOxEcaqg/EY/6ckpKSDOLj43cnJyfPZ98ZGRlq
        BP04JycHZWVlCAkJ6fX19f0+MTERBw4cEMbRox9h1+49iE9JhfviJSgKWIBLiy1x6V1tfKSm3CEc/GdE
        MIPIyMj7mzdvRkpKCsjTc1Kp9Gx6ejoOHz4sjPr6emzduhXV1dWC91VVVdi5cydqampQW1uLAwcPIreg
        EN6BQVjm6IDsCdq9Hzg5aYiIP1ZmZqYRwX9ih9fV1aGhoUE4mHm+Y8cOYTDorl27sGfPHuzbtw+7d+8W
        jGCR2bJlC7Zt24bt27fjww8/FIzZWlGB8JhYuMyf3+7s7Fzm5uY2TcS9qNTUVMOoqKgHxcXFAoB5ww5n
        hxwkjxiQgVhkmIEVdDADMaMYjK1n/y8qKkJJSQk2bdokrGXrmBPM8LVULwu9fXhbZ+dSETuorKwso+jo
        6Af5+fnCIWwwT34fXmYEg5WXlwug0tJSwXP2zfYwg9h69l1YWIgCGhs2bABzqpQMKqmowqWUYOwfpnxV
        RHNc3JpEY4I/ZDkuKCgQNrJNv/fk+fAygxiIzbM969evx8aNG39bzwwor6xCdXYKMrOyhRRm5BXynxXG
        KG67TkWt5qsXRDzHFUcGfZuSnIik1LVgRlAdIDs7G+vWrUNeXt4LAMET0WtmEAvvlq3bkL9hI7JoTz7t
        LYmLQ0lUNM5mR+DsKjfEJqUI4+SmZMUj7xn8FVsD1A9/9XIDx02t5zh1rk86+wE+XY+mnev46NgEPi4h
        EXT9QDUBdsfpVoBSJHiRm5sLlqbno7RxczmuZaxEekgoal2dcM5dgiuO09HqaowTK99HQFgkjpStRftK
        a9z2mI5LRm/iuolW/3WD4ZfOj1Aq4DoCLa/xpwqBryvR//kmfm9pGh8cGslHUeVSL8CaNWtAfUG4kmvX
        /jdKmWRUZn4B7ucFoZMOP+Rij4chrugvXI7OVRLcspyMI16OqChKgTzODfe8zHDNWg93JG9D4TMF/W7j
        +Ttmryu4X5ZbftHfmA18WQGcLwPOFvEdTQX8ppw1CJDKEBoWDrqaoDpBbOygUQnUgJIz09FaKoMiwh4d
        gdY45WKFAYKzFsynzMdPlOuvFlpCXuiPHxeZ4t/0o3Rrjg56fYzBe07Ck3lj0WKg8Yx7tMziZM++JOAC
        wT8rAc5sAE7kAidzcO9oDtISI+EbsBLSVcGsAyIkNAzxiXHorAgHIh3QG+mINpkdf3rJXHRGugAZnkCS
        G+RSK9ywnIS777+D72z08OM8A/SvMAO/RB+98yfgmvlI/sQo1WruoY/5oe4dEcA/ioHTlIoT9Ft+LIf6
        eTpwKAVoTMdXtZkIW70Ki5f6ISomDL27YqGItEdP1Fz0RDhCHm7PPw6Ywz/wNIMi5X0gwRmItkfrAoqC
        yTh8bz0Z3X6m4H2NMeCpg58c3sSZiWpf13GcHXd/iemOpyVSoJngx8nzY5SOenrRHEkFDiQCe2KBajKw
        MQ3N1Rnoq01Af4QdwR3RTfCucAc8C7VDm/9s3LTRp/85ALGOFB0JFDJLtC15B72B5oCfCRRe+uhwGY8L
        ehq99a8OiT7DccrcXU+zoo51vsApekQ0Zg16LsApLXvjgZpooCoMKF9Fc2sJPA9ygsgJ3BVmjy6Cd6+2
        Rb9sDlpsDHHP4z0gxh4ItQJWzQS/0gxY/g54HwP0eEzCt+ajcFRT+fQpjhsj9IEOb1PL2+7vtbalLgYa
        GJzCvv85+A7KdUUIvfGCBKO6IuaSx/aC109XD8Iblkpg5+CABXMk+HjmFPRIZwPBs4AVpgQ3Ab/UEAOL
        dPGj7Zto0h6GfSpKMgH+H3X5zBr3s/u7jXd8LNFXRcD9CQSPEuGrB70vWUHpiMPTMEd0htgK44lMgm4a
        FV52cJznjAjzmThuro9ny2cCzHN/E2AZVT0VXr/H27g9axQ9ToYqDquoGIroF9W1aHrQtbmGT1oTPAYN
        qBThpQQvoiu2MxxPgm3RQa/dDrrr7dI5VO3W2OligVzz93BBYoQn/pRvKcv5NIA8B8HZtVPMH48eJ2pC
        UzXbz7yulH6A47RF7ItqczPU+cbR6JPri2bwA8WBZAAV6EaCF1KdbAvm24Mk+CXIZnCssMZ9J2N8ZmWA
        u+5UZDILIJBqgKqdX2oA3kvvN3i/yzj0OY2B3GEkbkwdJj85Qmk7tWIDEfuiwHFDbswzivnKRl/eGu5E
        4fcH8rwpCv784xU2eExg9vfRBxa4aUFNxZuKLHC6AAYVGwv5wEIddLm9hT43bYKPRd+8Meh1HIVu+zfQ
        ZTsCt6aq950brdwoIv+37tlNMW6ZNbnlquu7UKRTgylYxrdS13tMz+02MuK66zS0TBmFJwv0AO8pwGJd
        8ATuc5+Ihw5jcdFQs/M7k9fk3Y6j+R6HQfgzyQg8tX4NHbM18K3B0AER9cd6ZMmpXDHXyThnNrGvTWqL
        HzxN8a85U/DJNO3eZu0RF68Yjbwj99DlWah59wnooXDftRvDn9XXuFOrOiShUe2VzOtGGu1y5vlz8Pvm
        6mger9wrYv6/vpn+1gyCtjQbjfv0lPE42WW9sVpNGkqLbplpPVYQuM91HDqpv39n/sZA83i1fx5R4QJr
        OG4YFdsbpzSVsm4Yqz3qsNbkH1sMw21TNZzXVZHv1XylUjz+r+kQx+lcnqh2ot1Wi79nM5K/oK/Rd2z0
        0EMHOW4ugZXEZVwTx41uVOfSLk5Q6Tg/WZXWDLm8R50r3cxxJuKSv6Y0KtYjStyC5jFDjx0brXJ8/xAu
        4SjHvSVOvyAySKNWmZPVqHJRFJmp7JvjOO5Xi8GzKHcDrj0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="m_addCatBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>