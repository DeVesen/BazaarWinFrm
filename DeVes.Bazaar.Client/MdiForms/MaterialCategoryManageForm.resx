<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="m_removeCatBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="m_addCatBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>